[{"E:\\React\\mini-project-demo\\client\\src\\index.js":"1","E:\\React\\mini-project-demo\\client\\src\\App.js":"2","E:\\React\\mini-project-demo\\client\\src\\reducers\\index.js":"3","E:\\React\\mini-project-demo\\client\\src\\Front page\\Frontpage.js":"4","E:\\React\\mini-project-demo\\client\\src\\Home\\Home.js":"5","E:\\React\\mini-project-demo\\client\\src\\reducers\\auth.js":"6","E:\\React\\mini-project-demo\\client\\src\\Front page\\Footer.js":"7","E:\\React\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatwindow.js":"8","E:\\React\\mini-project-demo\\client\\src\\Home\\Snow\\Snow.js":"9","E:\\React\\mini-project-demo\\client\\src\\constants\\actionTypes.js":"10","E:\\React\\mini-project-demo\\client\\src\\Home\\Chat window\\Searchbar.js":"11","E:\\React\\mini-project-demo\\client\\src\\Home\\Side Panel\\SidePanel.js":"12","E:\\React\\mini-project-demo\\client\\src\\Home\\Side Panel\\ChatList.js":"13","E:\\React\\mini-project-demo\\client\\src\\Home\\Usercard\\Usercard.js":"14","E:\\React\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatarea.js":"15","E:\\React\\mini-project-demo\\client\\src\\socket.js":"16","E:\\React\\mini-project-demo\\client\\src\\Home\\Chat window\\Videocall.js":"17","E:\\Mini Project\\mini-project-demo\\client\\src\\index.js":"18","E:\\Mini Project\\mini-project-demo\\client\\src\\App.js":"19","E:\\Mini Project\\mini-project-demo\\client\\src\\reducers\\index.js":"20","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Home.js":"21","E:\\Mini Project\\mini-project-demo\\client\\src\\Front page\\Frontpage.js":"22","E:\\Mini Project\\mini-project-demo\\client\\src\\reducers\\auth.js":"23","E:\\Mini Project\\mini-project-demo\\client\\src\\Front page\\Footer.js":"24","E:\\Mini Project\\mini-project-demo\\client\\src\\socket.js":"25","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Snow\\Snow.js":"26","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatwindow.js":"27","E:\\Mini Project\\mini-project-demo\\client\\src\\constants\\actionTypes.js":"28","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Searchbar.js":"29","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatarea.js":"30","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Side Panel\\ChatList.js":"31","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Side Panel\\SidePanel.js":"32","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Usercard\\Usercard.js":"33","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Videocall.js":"34","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\index.js":"35","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\App.js":"36","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\reducers\\index.js":"37","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Front page\\Frontpage.js":"38","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Home.js":"39","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\reducers\\auth.js":"40","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Front page\\Footer.js":"41","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\socket.js":"42","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatwindow.js":"43","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Snow\\Snow.js":"44","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\constants\\actionTypes.js":"45","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatarea.js":"46","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Searchbar.js":"47","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Usercard\\Usercard.js":"48","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Side Panel\\SidePanel.js":"49","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Side Panel\\ChatList.js":"50","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Videocall.js":"51","D:\\Colloquy\\client\\src\\index.js":"52","D:\\Colloquy\\client\\src\\App.js":"53","D:\\Colloquy\\client\\src\\reducers\\index.js":"54","D:\\Colloquy\\client\\src\\Front page\\Frontpage.js":"55","D:\\Colloquy\\client\\src\\Home\\Home.js":"56","D:\\Colloquy\\client\\src\\reducers\\auth.js":"57","D:\\Colloquy\\client\\src\\socket.js":"58","D:\\Colloquy\\client\\src\\Front page\\Footer.js":"59","D:\\Colloquy\\client\\src\\Home\\Snow\\Snow.js":"60","D:\\Colloquy\\client\\src\\Home\\Chat window\\Chatwindow.js":"61","D:\\Colloquy\\client\\src\\constants\\actionTypes.js":"62","D:\\Colloquy\\client\\src\\Home\\Chat window\\Chatarea.js":"63","D:\\Colloquy\\client\\src\\Home\\Chat window\\Searchbar.js":"64","D:\\Colloquy\\client\\src\\Home\\Usercard\\Usercard.js":"65","D:\\Colloquy\\client\\src\\Home\\Side Panel\\SidePanel.js":"66","D:\\Colloquy\\client\\src\\Home\\Side Panel\\ChatList.js":"67","D:\\Colloquy\\client\\src\\Home\\Chat window\\Videocall.js":"68"},{"size":422,"mtime":1612632938000,"results":"69","hashOfConfig":"70"},{"size":510,"mtime":1615399400000,"results":"71","hashOfConfig":"70"},{"size":138,"mtime":1612632810000,"results":"72","hashOfConfig":"70"},{"size":5899,"mtime":1617724254000,"results":"73","hashOfConfig":"70"},{"size":878,"mtime":1617724224000,"results":"74","hashOfConfig":"70"},{"size":462,"mtime":1617723478000,"results":"75","hashOfConfig":"70"},{"size":311,"mtime":1612193240000,"results":"76","hashOfConfig":"70"},{"size":1706,"mtime":1617376840000,"results":"77","hashOfConfig":"70"},{"size":3326,"mtime":1617191892000,"results":"78","hashOfConfig":"70"},{"size":58,"mtime":1612628046000,"results":"79","hashOfConfig":"70"},{"size":324,"mtime":1614021654000,"results":"80","hashOfConfig":"70"},{"size":1082,"mtime":1617207682000,"results":"81","hashOfConfig":"70"},{"size":928,"mtime":1617359244000,"results":"82","hashOfConfig":"70"},{"size":1166,"mtime":1617724474000,"results":"83","hashOfConfig":"70"},{"size":6062,"mtime":1617731570000,"results":"84","hashOfConfig":"70"},{"size":227,"mtime":1617194254000,"results":"85","hashOfConfig":"70"},{"size":5513,"mtime":1617732022000,"results":"86","hashOfConfig":"70"},{"size":422,"mtime":1612632938000,"results":"87","hashOfConfig":"88"},{"size":510,"mtime":1615399400000,"results":"89","hashOfConfig":"88"},{"size":138,"mtime":1612632810000,"results":"90","hashOfConfig":"88"},{"size":944,"mtime":1620583956000,"results":"91","hashOfConfig":"88"},{"size":5952,"mtime":1620800726000,"results":"92","hashOfConfig":"88"},{"size":462,"mtime":1617723478000,"results":"93","hashOfConfig":"88"},{"size":311,"mtime":1612193240000,"results":"94","hashOfConfig":"88"},{"size":227,"mtime":1617194254000,"results":"95","hashOfConfig":"88"},{"size":3326,"mtime":1617191892000,"results":"96","hashOfConfig":"88"},{"size":2130,"mtime":1620577098000,"results":"97","hashOfConfig":"88"},{"size":58,"mtime":1612628046000,"results":"98","hashOfConfig":"88"},{"size":822,"mtime":1620577262000,"results":"99","hashOfConfig":"88"},{"size":6661,"mtime":1620574302000,"results":"100","hashOfConfig":"88"},{"size":928,"mtime":1617359244000,"results":"101","hashOfConfig":"88"},{"size":1395,"mtime":1620575816000,"results":"102","hashOfConfig":"88"},{"size":1166,"mtime":1617724474000,"results":"103","hashOfConfig":"88"},{"size":5513,"mtime":1617732022000,"results":"104","hashOfConfig":"88"},{"size":422,"mtime":1612632938000,"results":"105","hashOfConfig":"106"},{"size":510,"mtime":1615399400000,"results":"107","hashOfConfig":"106"},{"size":138,"mtime":1612632810000,"results":"108","hashOfConfig":"106"},{"size":5952,"mtime":1620800726000,"results":"109","hashOfConfig":"106"},{"size":944,"mtime":1620583956000,"results":"110","hashOfConfig":"106"},{"size":462,"mtime":1617723478000,"results":"111","hashOfConfig":"106"},{"size":311,"mtime":1612193240000,"results":"112","hashOfConfig":"106"},{"size":227,"mtime":1617194254000,"results":"113","hashOfConfig":"106"},{"size":2423,"mtime":1620963642000,"results":"114","hashOfConfig":"106"},{"size":3326,"mtime":1617191892000,"results":"115","hashOfConfig":"106"},{"size":58,"mtime":1612628046000,"results":"116","hashOfConfig":"106"},{"size":6615,"mtime":1620966422000,"results":"117","hashOfConfig":"106"},{"size":822,"mtime":1620577262000,"results":"118","hashOfConfig":"106"},{"size":1166,"mtime":1617724474000,"results":"119","hashOfConfig":"106"},{"size":2562,"mtime":1620978260000,"results":"120","hashOfConfig":"106"},{"size":928,"mtime":1617359244000,"results":"121","hashOfConfig":"106"},{"size":5513,"mtime":1617732022000,"results":"122","hashOfConfig":"106"},{"size":422,"mtime":1612632938000,"results":"123","hashOfConfig":"124"},{"size":510,"mtime":1615399400000,"results":"125","hashOfConfig":"124"},{"size":138,"mtime":1612632810000,"results":"126","hashOfConfig":"124"},{"size":5952,"mtime":1620800726000,"results":"127","hashOfConfig":"124"},{"size":944,"mtime":1620583956000,"results":"128","hashOfConfig":"124"},{"size":462,"mtime":1617723478000,"results":"129","hashOfConfig":"124"},{"size":227,"mtime":1617194254000,"results":"130","hashOfConfig":"124"},{"size":311,"mtime":1612193240000,"results":"131","hashOfConfig":"124"},{"size":3326,"mtime":1617191892000,"results":"132","hashOfConfig":"124"},{"size":2423,"mtime":1620963642000,"results":"133","hashOfConfig":"124"},{"size":58,"mtime":1612628046000,"results":"134","hashOfConfig":"124"},{"size":6615,"mtime":1620966422000,"results":"135","hashOfConfig":"124"},{"size":822,"mtime":1620577262000,"results":"136","hashOfConfig":"124"},{"size":1166,"mtime":1617724474000,"results":"137","hashOfConfig":"124"},{"size":2562,"mtime":1620978260000,"results":"138","hashOfConfig":"124"},{"size":928,"mtime":1617359244000,"results":"139","hashOfConfig":"124"},{"size":5513,"mtime":1617732022000,"results":"140","hashOfConfig":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},"12n0sxu",{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"143"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"143"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"143"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"143"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"143"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"143"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"143"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"143"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},"199qbi2",{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"187"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"187"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"187"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"187"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"187"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"187"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"187"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},"1dmi0bz",{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"229"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"229"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"229"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"229"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"229"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"229"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"229"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dmo7ok",{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\React\\mini-project-demo\\client\\src\\index.js",[],["300","301"],"E:\\React\\mini-project-demo\\client\\src\\App.js",["302"],"import React from \"react\";\r\nimport Frontpage from \"./Front page/Frontpage\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./Home/Home\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <div>\r\n          <Route exact path=\"/\">\r\n            <Frontpage />\r\n          </Route>\r\n\r\n          <Route path=\"/home\">\r\n            <Home />\r\n          </Route>\r\n        </div>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","E:\\React\\mini-project-demo\\client\\src\\reducers\\index.js",[],"E:\\React\\mini-project-demo\\client\\src\\Front page\\Frontpage.js",["303","304"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Frontpage.css\";\r\nimport logo from \"./logo.png\";\r\nimport google_icon from \"./google_icon.png\";\r\nimport Particles from \"react-particles-js\";\r\nimport Footer from \"./Footer\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst Frontpage = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const history = useHistory();\r\n  const googleSuccess = async (res) => {\r\n    const result = res?.profileObj; //?. used so that error is not thrown if res is unavailable\r\n    const token = res?.tokenId;\r\n\r\n    //Because async function\r\n    try {\r\n      dispatch({ type: \"AUTH\", data: { result, token } });\r\n\r\n      history.push(\"/home\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const googleFailure = () => {\r\n    console.log(\"Google sign In was unsuccessful. Try again later\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <div className=\"container\">\r\n        <img src={logo} alt=\"logo\" className=\"Nav-logo\"></img>\r\n        <div className=\"main-logo-div\">\r\n          <img src={logo} alt=\"logo\" className=\"main-logo\"></img>\r\n          <p className=\"main-text\">\r\n            An engineering solution to meeting friends, family or work, free and\r\n            easy to use.\r\n          </p>\r\n\r\n          <GoogleLogin\r\n            clientId=\"215964193049-dquscbtckk8qrt0jdr7hjeih434m96jt.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <button\r\n                className=\"button-1\"\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n              >\r\n                <img src={google_icon} alt=\"\" className=\"g-icon\"></img>Sign in\r\n                with Google\r\n              </button>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy=\"single_host_origin\"\r\n          />\r\n\r\n          <hr className=\"rule\"></hr>\r\n          <p className=\"learn-more\">\r\n            <span style={{ color: \"#44D096\" }}>Learn More</span> about Colloquy\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"Particles\">\r\n          <Particles\r\n            params={{\r\n              particles: {\r\n                number: {\r\n                  value: 85,\r\n                  density: {\r\n                    enable: true,\r\n                    value_area: 700,\r\n                  },\r\n                },\r\n                color: {\r\n                  value: \"#ffffff\",\r\n                },\r\n                shape: {\r\n                  type: \"circle\",\r\n                  stroke: {\r\n                    width: 0,\r\n                    color: \"#000000\",\r\n                  },\r\n                  polygon: {\r\n                    nb_sides: 5,\r\n                  },\r\n                  image: {\r\n                    src: \"img/github.svg\",\r\n                    width: 100,\r\n                    height: 100,\r\n                  },\r\n                },\r\n                opacity: {\r\n                  value: 0.5,\r\n                  random: false,\r\n                  anim: {\r\n                    enable: false,\r\n                    speed: 0.75,\r\n                    opacity_min: 0.1,\r\n                    sync: false,\r\n                  },\r\n                },\r\n                size: {\r\n                  value: 3,\r\n                  random: true,\r\n                  anim: {\r\n                    enable: false,\r\n                    speed: 40,\r\n                    size_min: 0.1,\r\n                    sync: false,\r\n                  },\r\n                },\r\n                line_linked: {\r\n                  enable: true,\r\n                  distance: 150,\r\n                  color: \"#ffffff\",\r\n                  opacity: 0.4,\r\n                  width: 1,\r\n                },\r\n                move: {\r\n                  enable: true,\r\n                  speed: 6,\r\n                  direction: \"none\",\r\n                  random: false,\r\n                  straight: false,\r\n                  out_mode: \"out\",\r\n                  bounce: false,\r\n                  attract: {\r\n                    enable: false,\r\n                    rotateX: 600,\r\n                    rotateY: 1200,\r\n                  },\r\n                },\r\n              },\r\n              interactivity: {\r\n                detect_on: \"canvas\",\r\n                events: {\r\n                  onhover: {\r\n                    enable: false,\r\n                    mode: \"grab\",\r\n                  },\r\n                  onclick: {\r\n                    enable: true,\r\n                    mode: \"push\",\r\n                  },\r\n                  resize: true,\r\n                },\r\n                modes: {\r\n                  grab: {\r\n                    distance: 400,\r\n                    line_linked: {\r\n                      opacity: 1,\r\n                    },\r\n                  },\r\n                  bubble: {\r\n                    distance: 400,\r\n                    size: 40,\r\n                    duration: 2,\r\n                    opacity: 8,\r\n                    speed: 3,\r\n                  },\r\n                  repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4,\r\n                  },\r\n                  push: {\r\n                    particles_nb: 4,\r\n                  },\r\n                  remove: {\r\n                    particles_nb: 2,\r\n                  },\r\n                },\r\n              },\r\n              retina_detect: true,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Frontpage;\r\n","E:\\React\\mini-project-demo\\client\\src\\Home\\Home.js",["305","306","307","308"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Chatwindow from \"./Chat window/Chatwindow\";\r\nimport Snow from \"./Snow/Snow\";\r\nimport \"./Home.css\";\r\n\r\nimport socket from \"../socket\";\r\n\r\nconst Home = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  console.log(\"This is in home component\", user);\r\n\r\n  useEffect(() => {\r\n    const userName = user.result.email.split(\"@\")[0];\r\n    const name = user.result.givenName + \" \" + user.result.familyName;\r\n    const imgUrl = user.result.imageUrl;\r\n    setUserName(userName);\r\n    socket.auth = { userName, name, imgUrl };\r\n    socket.connect();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <Snow />\r\n      <Chatwindow />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\React\\mini-project-demo\\client\\src\\reducers\\auth.js",[],"E:\\React\\mini-project-demo\\client\\src\\Front page\\Footer.js",[],"E:\\React\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatwindow.js",["309","310"],"import React, { useState } from \"react\";\r\nimport \"./Chatwindow.css\";\r\nimport Usercard from \"../Usercard/Usercard\";\r\nimport SidePanel from \"../Side Panel/SidePanel\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport ChatList from \"../Side Panel/ChatList\";\r\nimport Chatarea from \"./Chatarea\";\r\n\r\nconst Chatwindow = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [selectedUserState, setStatus] = useState(false);\r\n  const [connectedUsersList, updateUserList] = useState([]);\r\n  const user_info = user;\r\n\r\n  let usersList = [];\r\n  const getSelectedUser = (e) => {\r\n    let selectedUserDetails = e;\r\n    console.log(\"This is Chatwindow\", selectedUserDetails);\r\n    setSelectedUser(selectedUserDetails);\r\n    setStatus(true);\r\n  };\r\n\r\n  const getUserList = (e) => {\r\n    updateUserList(e);\r\n    // usersList = [...usersList, e];\r\n    console.log(\"UserList in Chatwindow\", usersList);\r\n  };\r\n  return (\r\n    <div className=\"container-chat\">\r\n      <div className=\"wrapper1\">\r\n        <Usercard user={user_info} />\r\n        <Searchbar />\r\n        <SidePanel\r\n          user={user_info}\r\n          getUser={(e) => getSelectedUser(e)}\r\n          sendUserList={(e) => getUserList(e)}\r\n        />\r\n      </div>\r\n      <div className=\"wrapper2\">\r\n        {selectedUserState ? (\r\n          <Chatarea\r\n            selectedUser={selectedUser}\r\n            connectedUsers={connectedUsersList}\r\n            myDetails={user_info}\r\n          />\r\n        ) : (\r\n          <div className=\"no-render-message\">Click chat to start messaging</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatwindow;\r\n","E:\\React\\mini-project-demo\\client\\src\\Home\\Snow\\Snow.js",["311"],"import React from \"react\";\r\nimport Particles from \"react-particles-js\";\r\n\r\nimport \"./Snow.css\";\r\n\r\nconst Snow = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"Particles\">\r\n        <Particles\r\n          params={{\r\n            particles: {\r\n              number: {\r\n                value: 90,\r\n                density: {\r\n                  enable: true,\r\n                  value_area: 800,\r\n                },\r\n              },\r\n              color: {\r\n                value: \"#fff\",\r\n              },\r\n              shape: {\r\n                type: \"circle\",\r\n                stroke: {\r\n                  width: 0,\r\n                  color: \"#000000\",\r\n                },\r\n                polygon: {\r\n                  nb_sides: 5,\r\n                },\r\n                image: {\r\n                  src: \"img/github.svg\",\r\n                  width: 100,\r\n                  height: 100,\r\n                },\r\n              },\r\n              opacity: {\r\n                value: 0.5,\r\n                random: true,\r\n                anim: {\r\n                  enable: false,\r\n                  speed: 1,\r\n                  opacity_min: 0.1,\r\n                  sync: false,\r\n                },\r\n              },\r\n              size: {\r\n                value: 10,\r\n                random: true,\r\n                anim: {\r\n                  enable: false,\r\n                  speed: 40,\r\n                  size_min: 0.1,\r\n                  sync: false,\r\n                },\r\n              },\r\n              line_linked: {\r\n                enable: false,\r\n                distance: 500,\r\n                color: \"#ffffff\",\r\n                opacity: 0.4,\r\n                width: 2,\r\n              },\r\n              move: {\r\n                enable: true,\r\n                speed: 2,\r\n                direction: \"bottom\",\r\n                random: false,\r\n                straight: false,\r\n                out_mode: \"out\",\r\n                bounce: false,\r\n                attract: {\r\n                  enable: false,\r\n                  rotateX: 600,\r\n                  rotateY: 1200,\r\n                },\r\n              },\r\n            },\r\n            interactivity: {\r\n              detect_on: \"canvas\",\r\n              events: {\r\n                onhover: {\r\n                  enable: true,\r\n                  mode: \"bubble\",\r\n                },\r\n                onclick: {\r\n                  enable: true,\r\n                  mode: \"repulse\",\r\n                },\r\n                resize: true,\r\n              },\r\n              modes: {\r\n                grab: {\r\n                  distance: 400,\r\n                  line_linked: {\r\n                    opacity: 0.5,\r\n                  },\r\n                },\r\n                bubble: {\r\n                  distance: 400,\r\n                  size: 4,\r\n                  duration: 0.3,\r\n                  opacity: 1,\r\n                  speed: 3,\r\n                },\r\n                repulse: {\r\n                  distance: 200,\r\n                  duration: 0.4,\r\n                },\r\n                push: {\r\n                  particles_nb: 4,\r\n                },\r\n                remove: {\r\n                  particles_nb: 2,\r\n                },\r\n              },\r\n            },\r\n            retina_detect: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snow;\r\n","E:\\React\\mini-project-demo\\client\\src\\constants\\actionTypes.js",[],"E:\\React\\mini-project-demo\\client\\src\\Home\\Chat window\\Searchbar.js",[],"E:\\React\\mini-project-demo\\client\\src\\Home\\Side Panel\\SidePanel.js",["312","313"],"import React, { useState, useEffect } from \"react\";\r\nimport socket from \"../../socket\";\r\nimport Usercard from \"../Usercard/Usercard\";\r\nimport ChatList from \"./ChatList\";\r\nimport \"./SidePanel.css\";\r\n\r\nconst SidePanel = (props) => {\r\n  const [usersList, addUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    props.sendUserList(usersList);\r\n  }, [usersList]);\r\n\r\n  socket.on(\"users\", (users) => {\r\n    users.forEach((user) => {\r\n      user.self = user.userID === socket.id;\r\n    });\r\n    users = users.sort((a, b) => {\r\n      if (a.self) return -1;\r\n      if (b.self) return 1;\r\n      if (a.username < b.username) return -1;\r\n      return a.username > b.username ? 1 : 0;\r\n    });\r\n    addUsers(users);\r\n  });\r\n\r\n  socket.on(\"user connected\", (user) => {\r\n    addUsers([...usersList, user]);\r\n  });\r\n\r\n  const getSelectedUser = (e) => {\r\n    console.log(\"This is sidepanel\", e);\r\n    props.getUser(e);\r\n  };\r\n  return (\r\n    <div className=\"Side-panel\">\r\n      <ChatList user_info={usersList} sendUser={(e) => getSelectedUser(e)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidePanel;\r\n","E:\\React\\mini-project-demo\\client\\src\\Home\\Side Panel\\ChatList.js",["314"],"import React, { useState } from \"react\";\r\nimport \"./ChatList.css\";\r\n\r\nconst ChatList = (props) => {\r\n  let listOfChat = props.user_info;\r\n\r\n  let selectedUser = \"\";\r\n  const [currentUser, setCurrentUser] = useState({});\r\n\r\n  const getSelectedUser = (e) => {\r\n    selectedUser = e.target.innerText;\r\n    console.log(selectedUser);\r\n    let selectedUserDetails = listOfChat.find(\r\n      (user) => user.username === selectedUser\r\n    );\r\n\r\n    console.log(\"Selected user in ChatList component:\", selectedUserDetails);\r\n    setCurrentUser(selectedUserDetails);\r\n    props.sendUser(selectedUserDetails);\r\n  };\r\n\r\n  let users = listOfChat.map((user) => {\r\n    return (\r\n      <div className=\"chat-list-element\" key={user.key}>\r\n        <div onClick={getSelectedUser} className=\"user-element\">\r\n          {user.username}\r\n        </div>\r\n        <div style={{ fontSize: \"10px\" }}>{user.name}</div>\r\n      </div>\r\n    );\r\n  });\r\n  return <div className=\"chat-list-element-container\">{users}</div>;\r\n};\r\n\r\nexport default ChatList;\r\n","E:\\React\\mini-project-demo\\client\\src\\Home\\Usercard\\Usercard.js",[],"E:\\React\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatarea.js",["315"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Chatarea.css\";\r\nimport socket from \"../../socket\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPaperPlane,\r\n  faSmile,\r\n  faVideo,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport Videocall from \"./Videocall\";\r\n\r\nconst Chatarea = (props) => {\r\n  let selectedUser = props.selectedUser;\r\n  let ref = { target: { value: \" \" } }; //Ref to input tag to disable default behavior\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [showEmojiPicker, setEmojiPickerShowStatus] = useState(false);\r\n  const [messageContentState, setMessageContent] = useState(\"\");\r\n  const [showVideoCall, setShowVideoCall] = useState(false);\r\n  const getContent = (e) => {\r\n    ref = e;\r\n    console.log(ref);\r\n    setMessageContent(ref.target.value);\r\n  };\r\n\r\n  const getEmoji = (e) => {\r\n    console.log(\"Emoji event\", e.native);\r\n    setMessageContent((messageContentState) => messageContentState + e.native);\r\n  };\r\n\r\n  const messageEl = useRef(null);\r\n\r\n  const toggleVideoCall = () => {\r\n    setShowVideoCall(!showVideoCall);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (showVideoCall) alert(\"Call will be ended due to user Switch\");\r\n  //   setShowVideoCall(false);\r\n  // }, [props.selectedUser]);\r\n\r\n  useEffect(() => {\r\n    if (messageEl) {\r\n      messageEl.current.addEventListener(\"DOMNodeInserted\", (event) => {\r\n        const { currentTarget: target } = event;\r\n        target.scroll({ top: target.scrollHeight, behavior: \"smooth\" });\r\n      });\r\n    }\r\n  }, [messages]);\r\n\r\n  const emojiToggle = () => {\r\n    setEmojiPickerShowStatus(!showEmojiPicker);\r\n  };\r\n\r\n  const onMessage = (e, content) => {\r\n    if (showEmojiPicker) setEmojiPickerShowStatus(false);\r\n    e.preventDefault();\r\n    if (messageContentState === \"\") return;\r\n    console.log(\"Message is\", content);\r\n    setMessageContent(\"\");\r\n    if (props.selectedUser) {\r\n      socket.emit(\"private message\", {\r\n        content,\r\n        to: props.selectedUser.userID,\r\n      });\r\n      setMessages((messages) => [\r\n        ...messages,\r\n        { toUser: props.selectedUser.username, content, fromSelf: true },\r\n      ]);\r\n    }\r\n    console.log(\"Message object\", messages);\r\n  };\r\n\r\n  const showMessages = messages.map((message, index) => {\r\n    if (\r\n      message.fromSelf === true &&\r\n      message.toUser === props.selectedUser.username\r\n    )\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={`${\r\n            showVideoCall ? \"message-ribbon-sent-small\" : \"message-ribbon-sent\"\r\n          }`}\r\n        >\r\n          {message.content}\r\n        </div>\r\n      );\r\n    if (\r\n      message.fromSelf === false &&\r\n      message.fromUser === props.selectedUser.username\r\n    )\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={`${\r\n            showVideoCall\r\n              ? \"message-ribbon-received-small\"\r\n              : \"message-ribbon-received\"\r\n          }`}\r\n        >\r\n          {message.content}\r\n        </div>\r\n      );\r\n  });\r\n\r\n  socket.on(\"private message\", ({ content, from }) => {\r\n    console.log(\"Received message yey\", content, \"from\", from);\r\n    console.log(\"Chat area\", props.connectedUsers);\r\n    let newMessages = {};\r\n    for (let i = 0; i < props.connectedUsers.length; i++) {\r\n      const user = props.connectedUsers[i];\r\n      console.log(\"Iteration:\", i);\r\n      console.log(\"Zero user\", user[0]);\r\n      if (user.userID === from) {\r\n        console.log(\"Iteration:\", i);\r\n        newMessages = {\r\n          fromUser: props.connectedUsers[i].username,\r\n          content,\r\n          fromSelf: false,\r\n        };\r\n        const messagesList = [...messages, newMessages];\r\n        setMessages(messagesList);\r\n        console.log(\"I am printing the messages\", messages);\r\n      }\r\n    }\r\n  });\r\n\r\n  const checkVideoCallStatus = (val) => {\r\n    console.log(\"In call status\");\r\n    if (!val) {\r\n      setShowVideoCall(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-area-master\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"chat-header-dp-container\">\r\n          <img src={selectedUser.dpUrl} alt=\"userdp\"></img>\r\n        </div>\r\n        <div className=\"chat-header-user-container\">{selectedUser.name}</div>\r\n        <div className=\"video-cam-icon-container\" onClick={toggleVideoCall}>\r\n          <FontAwesomeIcon icon={faVideo} className=\"video-cam-icon\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"message-area\" ref={messageEl}>\r\n        <div\r\n          className={`${\r\n            showVideoCall ? \"temp-msg-container-small\" : \"temp-msg-container\"\r\n          }`}\r\n        >\r\n          {showMessages}\r\n          {showEmojiPicker && (\r\n            <span className=\"emoji-picker-span\">\r\n              <Picker onSelect={getEmoji} />\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"video-call\">\r\n          {showVideoCall && (\r\n            <Videocall\r\n              currentUser={props.selectedUser}\r\n              myInfo={props.myDetails}\r\n              showCallStatus={checkVideoCallStatus}\r\n              isVisible={showVideoCall}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"send-message-area\">\r\n        <form onSubmit={(e) => onMessage(e, messageContentState)}>\r\n          <input\r\n            className=\"chat-text-area\"\r\n            placeholder=\"Enter message to send\"\r\n            onChange={(e) => getContent(e)}\r\n            value={messageContentState}\r\n          ></input>\r\n          <span className=\"emoji-icon-container\" onClick={emojiToggle}>\r\n            <FontAwesomeIcon icon={faSmile} className=\"emoji-icon\" />\r\n          </span>\r\n\r\n          <button type=\"submit\" class=\"send-message-button\">\r\n            <FontAwesomeIcon\r\n              icon={faPaperPlane}\r\n              className=\"send-message-icon\"\r\n            />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatarea;\r\n","E:\\React\\mini-project-demo\\client\\src\\socket.js",[],"E:\\React\\mini-project-demo\\client\\src\\Home\\Chat window\\Videocall.js",["316","317","318","319"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport socket from \"../../socket\";\r\nimport Peer from \"simple-peer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Videocall.css\";\r\nimport {\r\n  faPhone,\r\n  faPhoneSlash,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Videocall = (props) => {\r\n  const [me, setMe] = useState(\"\");\r\n  const [stream, setStream] = useState();\r\n  const [receivingCall, setReceivingCall] = useState(false);\r\n  const [caller, setCaller] = useState(\"\");\r\n  const [callerSignal, setCallerSignal] = useState();\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [idToCall, setIdToCall] = useState(\"\");\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [name, setName] = useState(\r\n    props.myInfo.result.givenName +\r\n      \" \" +\r\n      props.myInfo.result.familyName +\r\n      \"(\" +\r\n      props.myInfo.result.email.split(\"@\")[0] +\r\n      \")\"\r\n  );\r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n\r\n  useEffect(() => {\r\n    //Webcam streaming enabled here\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        setStream(stream);\r\n        myVideo.current.srcObject = stream;\r\n      });\r\n    setIdToCall(props.currentUser.userID);\r\n    setMe(socket.id);\r\n\r\n    socket.on(\"callUser\", (data) => {\r\n      setReceivingCall(true);\r\n      setCaller(data.from);\r\n      setName(data.name);\r\n      setCallerSignal(data.signal);\r\n    });\r\n  }, [props.showVideoCall]);\r\n\r\n  const callUser = (id) => {\r\n    console.log(\"Call user activated\");\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"callUser\", {\r\n        userToCall: id,\r\n        signalData: data,\r\n        from: me,\r\n        name: name,\r\n      });\r\n    });\r\n\r\n    peer.on(\"stream\", (stream) => {\r\n      userVideo.current.srcObject = stream;\r\n    });\r\n\r\n    socket.on(\"callAccepted\", (signal) => {\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const answerCall = () => {\r\n    setCallAccepted(true);\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"answerCall\", { signal: data, to: caller });\r\n    });\r\n\r\n    peer.on(\"stream\", (stream) => {\r\n      userVideo.current.srcObject = stream;\r\n    });\r\n\r\n    peer.signal(callerSignal);\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const leaveCall = () => {\r\n    socket.emit(\"callEnded\", { to: caller });\r\n    setCallEnded(true);\r\n    connectionRef.current.destroy();\r\n    if (stream != null) {\r\n      stream.getTracks().map(function (val) {\r\n        val.stop();\r\n      });\r\n    }\r\n    props.showCallStatus(callEnded);\r\n    return;\r\n  };\r\n\r\n  socket.on(\"callEnded\", () => {\r\n    console.log(\"Call ended with user\");\r\n    setCallEnded(true);\r\n    connectionRef.current.destroy();\r\n    if (stream != null) {\r\n      stream.getTracks().map(function (val) {\r\n        val.stop();\r\n      });\r\n    }\r\n    props.showCallStatus(callEnded);\r\n  });\r\n\r\n  const closeVideoCallComponent = () => {\r\n    if (connectionRef.current) {\r\n      leaveCall();\r\n    } else {\r\n      if (stream != null) {\r\n        stream.getTracks().map(function (val) {\r\n          val.stop();\r\n        });\r\n      }\r\n      props.showCallStatus(callEnded);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-call-container\">\r\n      <div className=\"cross-button-container\">\r\n        <FontAwesomeIcon\r\n          icon={faTimes}\r\n          className=\"cross-button\"\r\n          onClick={closeVideoCallComponent}\r\n        ></FontAwesomeIcon>\r\n      </div>\r\n      <div className=\"my-video-container\">\r\n        <div className=\"user-video\">\r\n          {callAccepted && !callEnded ? (\r\n            <video\r\n              playsInline\r\n              ref={userVideo}\r\n              autoPlay\r\n              style={{ width: \"500px\" }}\r\n            />\r\n          ) : (\r\n            <div className=\"waiting-user-feed\">Waiting for user feed</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"my-video\">\r\n          {stream && (\r\n            <video\r\n              playsInline\r\n              muted\r\n              ref={myVideo}\r\n              autoPlay\r\n              style={{ width: \"200px\" }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"Button-container-1\">\r\n        {callAccepted && !callEnded ? (\r\n          <div onClick={leaveCall} className=\"end-call-button\">\r\n            <FontAwesomeIcon\r\n              icon={faPhoneSlash}\r\n              className=\"end-call-icon\"\r\n            ></FontAwesomeIcon>\r\n          </div>\r\n        ) : (\r\n          <div onClick={() => callUser(idToCall)} className=\"make-call-button\">\r\n            <FontAwesomeIcon\r\n              icon={faPhone}\r\n              className=\"make-call-icon\"\r\n            ></FontAwesomeIcon>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"see-this\">\r\n        {receivingCall && !callAccepted ? (\r\n          <div className=\"caller\">\r\n            <h1>{name} is calling...</h1>\r\n            <button onClick={answerCall} className=\"answer-call-button\">\r\n              {\" \"}\r\n              Answer Call{\" \"}\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Videocall;\r\n","E:\\Mini Project\\mini-project-demo\\client\\src\\index.js",[],["320","321"],"E:\\Mini Project\\mini-project-demo\\client\\src\\App.js",["322"],"E:\\Mini Project\\mini-project-demo\\client\\src\\reducers\\index.js",[],"E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Home.js",["323","324","325","326"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Chatwindow from \"./Chat window/Chatwindow\";\r\nimport Snow from \"./Snow/Snow\";\r\nimport \"./Home.css\";\r\n\r\nimport socket from \"../socket\";\r\n\r\nconst Home = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  console.log(\"This is in home component\", user);\r\n\r\n  useEffect(() => {\r\n    const userName = user.result.email.split(\"@\")[0];\r\n    const name = user.result.givenName + \" \" + user.result.familyName;\r\n    const imgUrl = user.result.imageUrl;\r\n    setUserName(userName);\r\n    socket.auth = { userName, name, imgUrl };\r\n    socket.connect();\r\n    socket.emit(\"new-user-sending\", { userName, name, imgUrl });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <Snow />\r\n      <Chatwindow />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\Mini Project\\mini-project-demo\\client\\src\\Front page\\Frontpage.js",["327","328"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Frontpage.css\";\r\nimport logo from \"./logo.png\";\r\nimport google_icon from \"./google_icon.png\";\r\nimport Particles from \"react-particles-js\";\r\nimport Footer from \"./Footer\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst Frontpage = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const history = useHistory();\r\n  const googleSuccess = async (res) => {\r\n    const result = res?.profileObj; //?. used so that error is not thrown if res is unavailable\r\n    const token = res?.tokenId;\r\n\r\n    //Because async function\r\n    try {\r\n      dispatch({ type: \"AUTH\", data: { result, token } });\r\n\r\n      history.push(\"/home\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const googleFailure = () => {\r\n    console.log(\"Google sign In was unsuccessful. Try again later\");\r\n    alert(\"LOGIN UNSUCCESSFUL. CHECK CREDENTIALS\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <div className=\"container\">\r\n        <img src={logo} alt=\"logo\" className=\"Nav-logo\"></img>\r\n        <div className=\"main-logo-div\">\r\n          <img src={logo} alt=\"logo\" className=\"main-logo\"></img>\r\n          <p className=\"main-text\">\r\n            An engineering solution to meeting friends, family or work, free and\r\n            easy to use.\r\n          </p>\r\n\r\n          <GoogleLogin\r\n            clientId=\"215964193049-dquscbtckk8qrt0jdr7hjeih434m96jt.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <button\r\n                className=\"button-1\"\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n              >\r\n                <img src={google_icon} alt=\"\" className=\"g-icon\"></img>Sign in\r\n                with Google\r\n              </button>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy=\"single_host_origin\"\r\n          />\r\n\r\n          <hr className=\"rule\"></hr>\r\n          <p className=\"learn-more\">\r\n            <span style={{ color: \"#44D096\" }}>Learn More</span> about Colloquy\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"Particles\">\r\n          <Particles\r\n            params={{\r\n              particles: {\r\n                number: {\r\n                  value: 85,\r\n                  density: {\r\n                    enable: true,\r\n                    value_area: 700,\r\n                  },\r\n                },\r\n                color: {\r\n                  value: \"#ffffff\",\r\n                },\r\n                shape: {\r\n                  type: \"circle\",\r\n                  stroke: {\r\n                    width: 0,\r\n                    color: \"#000000\",\r\n                  },\r\n                  polygon: {\r\n                    nb_sides: 5,\r\n                  },\r\n                  image: {\r\n                    src: \"img/github.svg\",\r\n                    width: 100,\r\n                    height: 100,\r\n                  },\r\n                },\r\n                opacity: {\r\n                  value: 0.5,\r\n                  random: false,\r\n                  anim: {\r\n                    enable: false,\r\n                    speed: 0.75,\r\n                    opacity_min: 0.1,\r\n                    sync: false,\r\n                  },\r\n                },\r\n                size: {\r\n                  value: 3,\r\n                  random: true,\r\n                  anim: {\r\n                    enable: false,\r\n                    speed: 40,\r\n                    size_min: 0.1,\r\n                    sync: false,\r\n                  },\r\n                },\r\n                line_linked: {\r\n                  enable: true,\r\n                  distance: 150,\r\n                  color: \"#ffffff\",\r\n                  opacity: 0.4,\r\n                  width: 1,\r\n                },\r\n                move: {\r\n                  enable: true,\r\n                  speed: 6,\r\n                  direction: \"none\",\r\n                  random: false,\r\n                  straight: false,\r\n                  out_mode: \"out\",\r\n                  bounce: false,\r\n                  attract: {\r\n                    enable: false,\r\n                    rotateX: 600,\r\n                    rotateY: 1200,\r\n                  },\r\n                },\r\n              },\r\n              interactivity: {\r\n                detect_on: \"canvas\",\r\n                events: {\r\n                  onhover: {\r\n                    enable: false,\r\n                    mode: \"grab\",\r\n                  },\r\n                  onclick: {\r\n                    enable: true,\r\n                    mode: \"push\",\r\n                  },\r\n                  resize: true,\r\n                },\r\n                modes: {\r\n                  grab: {\r\n                    distance: 400,\r\n                    line_linked: {\r\n                      opacity: 1,\r\n                    },\r\n                  },\r\n                  bubble: {\r\n                    distance: 400,\r\n                    size: 40,\r\n                    duration: 2,\r\n                    opacity: 8,\r\n                    speed: 3,\r\n                  },\r\n                  repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4,\r\n                  },\r\n                  push: {\r\n                    particles_nb: 4,\r\n                  },\r\n                  remove: {\r\n                    particles_nb: 2,\r\n                  },\r\n                },\r\n              },\r\n              retina_detect: true,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Frontpage;\r\n","E:\\Mini Project\\mini-project-demo\\client\\src\\reducers\\auth.js",[],"E:\\Mini Project\\mini-project-demo\\client\\src\\Front page\\Footer.js",[],"E:\\Mini Project\\mini-project-demo\\client\\src\\socket.js",[],"E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Snow\\Snow.js",[],"E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatwindow.js",["329","330"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Chatwindow.css\";\r\nimport Usercard from \"../Usercard/Usercard\";\r\nimport SidePanel from \"../Side Panel/SidePanel\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport ChatList from \"../Side Panel/ChatList\";\r\nimport Chatarea from \"./Chatarea\";\r\nimport socket from \"../../socket\";\r\n\r\nconst Chatwindow = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [selectedUserState, setStatus] = useState(false);\r\n  const [connectedUsersList, updateUserList] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const user_info = user;\r\n\r\n  let usersList = [];\r\n  const getSelectedUser = (e) => {\r\n    let selectedUserDetails = e;\r\n    console.log(\"This is Chatwindow\", selectedUserDetails);\r\n    setSelectedUser(selectedUserDetails);\r\n    setStatus(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"db-messages-output\", (result) => {\r\n      console.log(result);\r\n      setMessages(result);\r\n    });\r\n  }, []);\r\n\r\n  const getUserList = (e) => {\r\n    updateUserList(e);\r\n    // usersList = [...usersList, e];\r\n    console.log(\"UserList in Chatwindow\", usersList);\r\n  };\r\n\r\n  const getSearchVal = (searchContent) => {\r\n    console.log(\"SEARCH CONTENT\", searchContent);\r\n  };\r\n  return (\r\n    <div className=\"container-chat\">\r\n      <div className=\"wrapper1\">\r\n        <Usercard user={user_info} />\r\n        <Searchbar giveSearchVal={(e) => getSearchVal(e)} />\r\n        <SidePanel\r\n          user={user_info}\r\n          getUser={(e) => getSelectedUser(e)}\r\n          sendUserList={(e) => getUserList(e)}\r\n        />\r\n      </div>\r\n      <div className=\"wrapper2\">\r\n        {selectedUserState ? (\r\n          <Chatarea\r\n            selectedUser={selectedUser}\r\n            connectedUsers={connectedUsersList}\r\n            myDetails={user_info}\r\n            initialMsg={messages}\r\n          />\r\n        ) : (\r\n          <div className=\"no-render-message\">Click chat to start messaging</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatwindow;\r\n","E:\\Mini Project\\mini-project-demo\\client\\src\\constants\\actionTypes.js",[],"E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Searchbar.js",[],"E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatarea.js",["331","332"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Chatarea.css\";\r\nimport socket from \"../../socket\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPaperPlane,\r\n  faSmile,\r\n  faVideo,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport Videocall from \"./Videocall\";\r\n\r\nconst Chatarea = (props) => {\r\n  let selectedUser = props.selectedUser;\r\n  let ref = { target: { value: \" \" } }; //Ref to input tag to disable default behavior\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [showEmojiPicker, setEmojiPickerShowStatus] = useState(false);\r\n  const [messageContentState, setMessageContent] = useState(\"\");\r\n  const [showVideoCall, setShowVideoCall] = useState(false);\r\n  const getContent = (e) => {\r\n    ref = e;\r\n    console.log(ref);\r\n    setMessageContent(ref.target.value);\r\n  };\r\n\r\n  const getEmoji = (e) => {\r\n    console.log(\"Emoji event\", e.native);\r\n    setMessageContent((messageContentState) => messageContentState + e.native);\r\n  };\r\n\r\n  const messageEl = useRef(null);\r\n\r\n  const toggleVideoCall = () => {\r\n    setShowVideoCall(!showVideoCall);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const dbMsgArr = props.initialMsg;\r\n    const arrSize = dbMsgArr.length;\r\n    const myUserName = props.myDetails.result.email.split(\"@\")[0];\r\n    for (let i = 0; i < arrSize; i++) {\r\n      if (dbMsgArr[i].toUser === myUserName) {\r\n        dbMsgArr[i].fromSelf = false;\r\n      }\r\n    }\r\n    setMessages(props.initialMsg);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (messageEl) {\r\n      messageEl.current.addEventListener(\"DOMNodeInserted\", (event) => {\r\n        const { currentTarget: target } = event;\r\n        target.scroll({ top: target.scrollHeight, behavior: \"smooth\" });\r\n      });\r\n    }\r\n  }, [messages]);\r\n\r\n  const emojiToggle = () => {\r\n    setEmojiPickerShowStatus(!showEmojiPicker);\r\n  };\r\n\r\n  const onMessage = (e, content) => {\r\n    if (showEmojiPicker) setEmojiPickerShowStatus(false);\r\n    e.preventDefault();\r\n    if (messageContentState === \"\") return;\r\n    console.log(\"Message is\", content);\r\n    setMessageContent(\"\");\r\n    if (props.selectedUser) {\r\n      socket.emit(\"private message\", {\r\n        content,\r\n        to: props.selectedUser.userID,\r\n      });\r\n      //Newly added\r\n      socket.emit(\"database-message\", {\r\n        toUser: props.selectedUser.username,\r\n        content,\r\n        fromSelf: true,\r\n        fromUser: props.myDetails.result.email.split(\"@\")[0],\r\n      });\r\n      setMessages((messages) => [\r\n        ...messages,\r\n        {\r\n          toUser: props.selectedUser.username,\r\n          content,\r\n          fromSelf: true,\r\n          fromUser: props.myDetails.result.email.split(\"@\")[0],\r\n        },\r\n      ]);\r\n    }\r\n    console.log(\"Message object\", messages);\r\n  };\r\n\r\n  const showMessages = messages.map((message, index) => {\r\n    if (\r\n      message.fromSelf === true &&\r\n      message.toUser === props.selectedUser.username\r\n    )\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={`${\r\n            showVideoCall ? \"message-ribbon-sent-small\" : \"message-ribbon-sent\"\r\n          }`}\r\n        >\r\n          {message.content}\r\n        </div>\r\n      );\r\n    if (\r\n      message.fromSelf === false &&\r\n      message.fromUser === props.selectedUser.username\r\n    )\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={`${\r\n            showVideoCall\r\n              ? \"message-ribbon-received-small\"\r\n              : \"message-ribbon-received\"\r\n          }`}\r\n        >\r\n          {message.content}\r\n        </div>\r\n      );\r\n  });\r\n\r\n  socket.on(\"private message\", ({ content, from }) => {\r\n    console.log(\"Received message yey\", content, \"from\", from);\r\n    console.log(\"Chat area\", props.connectedUsers);\r\n    let newMessages = {};\r\n    for (let i = 0; i < props.connectedUsers.length; i++) {\r\n      const user = props.connectedUsers[i];\r\n      console.log(\"Iteration:\", i);\r\n      console.log(\"Zero user\", user[0]);\r\n      if (user.userID === from) {\r\n        console.log(\"Iteration:\", i);\r\n        newMessages = {\r\n          fromUser: props.connectedUsers[i].username,\r\n          content,\r\n          fromSelf: false,\r\n          toUser: props.myDetails.result.email.split(\"@\")[0],\r\n        };\r\n\r\n        const messagesList = [...messages, newMessages];\r\n        setMessages(messagesList);\r\n        // console.log(\"I am printing the messages\", messages);\r\n      }\r\n    }\r\n  });\r\n\r\n  const checkVideoCallStatus = (val) => {\r\n    console.log(\"In call status\");\r\n    if (!val) {\r\n      setShowVideoCall(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-area-master\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"chat-header-dp-container\">\r\n          <img src={selectedUser.dpUrl} alt=\"userdp\"></img>\r\n        </div>\r\n        <div className=\"chat-header-user-container\">{selectedUser.name}</div>\r\n        <div className=\"video-cam-icon-container\" onClick={toggleVideoCall}>\r\n          <FontAwesomeIcon icon={faVideo} className=\"video-cam-icon\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"message-area\" ref={messageEl}>\r\n        <div\r\n          className={`${\r\n            showVideoCall ? \"temp-msg-container-small\" : \"temp-msg-container\"\r\n          }`}\r\n        >\r\n          {showMessages}\r\n          {showEmojiPicker && (\r\n            <span className=\"emoji-picker-span\">\r\n              <Picker onSelect={getEmoji} />\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"video-call\">\r\n          {showVideoCall && (\r\n            <Videocall\r\n              currentUser={props.selectedUser}\r\n              myInfo={props.myDetails}\r\n              showCallStatus={checkVideoCallStatus}\r\n              isVisible={showVideoCall}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"send-message-area\">\r\n        <form onSubmit={(e) => onMessage(e, messageContentState)}>\r\n          <input\r\n            className=\"chat-text-area\"\r\n            placeholder=\"Enter message to send\"\r\n            onChange={(e) => getContent(e)}\r\n            value={messageContentState}\r\n          ></input>\r\n          <span className=\"emoji-icon-container\" onClick={emojiToggle}>\r\n            <FontAwesomeIcon icon={faSmile} className=\"emoji-icon\" />\r\n          </span>\r\n\r\n          <button type=\"submit\" className=\"send-message-button\">\r\n            <FontAwesomeIcon\r\n              icon={faPaperPlane}\r\n              className=\"send-message-icon\"\r\n            />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatarea;\r\n","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Side Panel\\ChatList.js",["333"],"import React, { useState } from \"react\";\r\nimport \"./ChatList.css\";\r\n\r\nconst ChatList = (props) => {\r\n  let listOfChat = props.user_info;\r\n\r\n  let selectedUser = \"\";\r\n\r\n  const getSelectedUser = (e) => {\r\n    selectedUser = e.target.innerText;\r\n    console.log(selectedUser);\r\n    let selectedUserDetails = listOfChat.find(\r\n      (user) => user.username === selectedUser\r\n    );\r\n\r\n    console.log(\"Selected user in ChatList component:\", selectedUserDetails);\r\n\r\n    props.sendUser(selectedUserDetails);\r\n  };\r\n\r\n  let users = listOfChat.map((user) => {\r\n    return (\r\n      <div className=\"chat-list-element\" key={user.key}>\r\n        <div onClick={getSelectedUser} className=\"user-element\">\r\n          {user.username}\r\n        </div>\r\n        <div style={{ fontSize: \"10px\" }}>{user.name}</div>\r\n      </div>\r\n    );\r\n  });\r\n  return <div className=\"chat-list-element-container\">{users}</div>;\r\n};\r\n\r\nexport default ChatList;\r\n","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Side Panel\\SidePanel.js",["334","335"],"import React, { useState, useEffect } from \"react\";\r\nimport socket from \"../../socket\";\r\nimport Usercard from \"../Usercard/Usercard\";\r\nimport ChatList from \"./ChatList\";\r\nimport \"./SidePanel.css\";\r\n\r\nconst SidePanel = (props) => {\r\n  const [usersList, addUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    props.sendUserList(usersList);\r\n  }, [usersList]);\r\n\r\n  socket.on(\"users\", (users) => {\r\n    users.forEach((user) => {\r\n      user.self = user.userID === socket.id;\r\n    });\r\n    users = users.sort((a, b) => {\r\n      if (a.self) return -1;\r\n      if (b.self) return 1;\r\n      if (a.username < b.username) return -1;\r\n      return a.username > b.username ? 1 : 0;\r\n    });\r\n    addUsers(users);\r\n  });\r\n\r\n  socket.on(\"user connected\", (user) => {\r\n    let flag = 0;\r\n    if (user) {\r\n      const userListSize = usersList.length;\r\n      for (let i = 0; i < userListSize; i++) {\r\n        if (usersList[i].username === user.username) {\r\n          flag = 1;\r\n          usersList[i].userID = user.userID;\r\n        }\r\n      }\r\n      if (!flag) {\r\n        addUsers([...usersList, user]);\r\n      }\r\n    }\r\n  });\r\n\r\n  const getSelectedUser = (e) => {\r\n    console.log(\"This is sidepanel\", e);\r\n    props.getUser(e);\r\n  };\r\n  return (\r\n    <div className=\"Side-panel\">\r\n      <ChatList user_info={usersList} sendUser={(e) => getSelectedUser(e)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidePanel;\r\n","E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Usercard\\Usercard.js",[],"E:\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Videocall.js",["336","337","338","339"],["340","341"],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\index.js",[],["342","343"],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\App.js",["344"],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\reducers\\index.js",[],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Front page\\Frontpage.js",["345","346"],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Home.js",["347","348","349","350"],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\reducers\\auth.js",[],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Front page\\Footer.js",[],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\socket.js",[],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatwindow.js",["351","352","353"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Chatwindow.css\";\r\nimport Usercard from \"../Usercard/Usercard\";\r\nimport SidePanel from \"../Side Panel/SidePanel\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport ChatList from \"../Side Panel/ChatList\";\r\nimport Chatarea from \"./Chatarea\";\r\nimport socket from \"../../socket\";\r\n\r\nconst Chatwindow = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [selectedUserState, setStatus] = useState(false);\r\n  const [connectedUsersList, updateUserList] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [searchUser, insertUser] = useState(\"\");\r\n  const user_info = user;\r\n\r\n  let usersList = [];\r\n  const getSelectedUser = (e) => {\r\n    let selectedUserDetails = e;\r\n    console.log(\"This is Chatwindow\", selectedUserDetails);\r\n    setSelectedUser(selectedUserDetails);\r\n    setStatus(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"db-messages-output\", (result) => {\r\n      console.log(result);\r\n      setMessages(result);\r\n    });\r\n  }, []);\r\n\r\n  const getUserList = (e) => {\r\n    updateUserList(e);\r\n    // usersList = [...usersList, e];\r\n    console.log(\"UserList in Chatwindow\", connectedUsersList);\r\n  };\r\n\r\n  const getSearchVal = (searchContent) => {\r\n    let flag = 0;\r\n    for (let i = 0; i < connectedUsersList.length; i++) {\r\n      if (searchContent === connectedUsersList[i].username) {\r\n        insertUser(searchContent);\r\n        flag = 1;\r\n      }\r\n    }\r\n    if (!flag) alert(\"User not found\");\r\n  };\r\n  return (\r\n    <div className=\"container-chat\">\r\n      <div className=\"wrapper1\">\r\n        <Usercard user={user_info} />\r\n        <Searchbar giveSearchVal={(e) => getSearchVal(e)} />\r\n        <SidePanel\r\n          user={user_info}\r\n          getUser={(e) => getSelectedUser(e)}\r\n          sendUserList={(e) => getUserList(e)}\r\n          newChat={searchUser}\r\n        />\r\n      </div>\r\n      <div className=\"wrapper2\">\r\n        {selectedUserState ? (\r\n          <Chatarea\r\n            selectedUser={selectedUser}\r\n            connectedUsers={connectedUsersList}\r\n            myDetails={user_info}\r\n            initialMsg={messages}\r\n          />\r\n        ) : (\r\n          <div className=\"no-render-message\">Click chat to start messaging</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatwindow;\r\n","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Snow\\Snow.js",[],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\constants\\actionTypes.js",[],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Chatarea.js",["354","355"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Chatarea.css\";\r\nimport socket from \"../../socket\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPaperPlane,\r\n  faSmile,\r\n  faVideo,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport Videocall from \"./Videocall\";\r\n\r\nconst Chatarea = (props) => {\r\n  let selectedUser = props.selectedUser;\r\n  let ref = { target: { value: \" \" } }; //Ref to input tag to disable default behavior\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [showEmojiPicker, setEmojiPickerShowStatus] = useState(false);\r\n  const [messageContentState, setMessageContent] = useState(\"\");\r\n  const [showVideoCall, setShowVideoCall] = useState(false);\r\n  const getContent = (e) => {\r\n    ref = e;\r\n    console.log(ref);\r\n    setMessageContent(ref.target.value);\r\n  };\r\n\r\n  const getEmoji = (e) => {\r\n    console.log(\"Emoji event\", e.native);\r\n    setMessageContent((messageContentState) => messageContentState + e.native);\r\n  };\r\n\r\n  const messageEl = useRef(null);\r\n\r\n  const toggleVideoCall = () => {\r\n    setShowVideoCall(!showVideoCall);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const dbMsgArr = props.initialMsg;\r\n    const arrSize = dbMsgArr.length;\r\n    const myUserName = props.myDetails.result.email.split(\"@\")[0];\r\n    for (let i = 0; i < arrSize; i++) {\r\n      if (dbMsgArr[i].toUser === myUserName) {\r\n        dbMsgArr[i].fromSelf = false;\r\n      }\r\n    }\r\n    setMessages(props.initialMsg);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (messageEl) {\r\n      messageEl.current.addEventListener(\"DOMNodeInserted\", (event) => {\r\n        const { currentTarget: target } = event;\r\n        target.scroll({ top: target.scrollHeight, behavior: \"smooth\" });\r\n      });\r\n    }\r\n  }, [messages]);\r\n\r\n  const emojiToggle = () => {\r\n    setEmojiPickerShowStatus(!showEmojiPicker);\r\n  };\r\n\r\n  const onMessage = (e, content) => {\r\n    if (showEmojiPicker) setEmojiPickerShowStatus(false);\r\n    e.preventDefault();\r\n    if (messageContentState === \"\") return;\r\n    console.log(\"Message is\", content);\r\n    setMessageContent(\"\");\r\n    if (props.selectedUser) {\r\n      socket.emit(\"private message\", {\r\n        content,\r\n        to: props.selectedUser.userID,\r\n      });\r\n      //Newly added\r\n      socket.emit(\"database-message\", {\r\n        toUser: props.selectedUser.username,\r\n        content,\r\n        fromSelf: true,\r\n        fromUser: props.myDetails.result.email.split(\"@\")[0],\r\n      });\r\n      setMessages((messages) => [\r\n        ...messages,\r\n        {\r\n          toUser: props.selectedUser.username,\r\n          content,\r\n          fromSelf: true,\r\n          fromUser: props.myDetails.result.email.split(\"@\")[0],\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const showMessages = messages.map((message, index) => {\r\n    if (\r\n      message.fromSelf === true &&\r\n      message.toUser === props.selectedUser.username\r\n    )\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={`${\r\n            showVideoCall ? \"message-ribbon-sent-small\" : \"message-ribbon-sent\"\r\n          }`}\r\n        >\r\n          {message.content}\r\n        </div>\r\n      );\r\n    if (\r\n      message.fromSelf === false &&\r\n      message.fromUser === props.selectedUser.username\r\n    )\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={`${\r\n            showVideoCall\r\n              ? \"message-ribbon-received-small\"\r\n              : \"message-ribbon-received\"\r\n          }`}\r\n        >\r\n          {message.content}\r\n        </div>\r\n      );\r\n  });\r\n\r\n  socket.on(\"private message\", ({ content, from }) => {\r\n    console.log(\"Received message yey\", content, \"from\", from);\r\n    console.log(\"Chat area\", props.connectedUsers);\r\n    let newMessages = {};\r\n    for (let i = 0; i < props.connectedUsers.length; i++) {\r\n      const user = props.connectedUsers[i];\r\n      console.log(\"Iteration:\", i);\r\n      console.log(\"Zero user\", user[0]);\r\n      if (user.userID === from) {\r\n        console.log(\"Iteration:\", i);\r\n        newMessages = {\r\n          fromUser: props.connectedUsers[i].username,\r\n          content,\r\n          fromSelf: false,\r\n          toUser: props.myDetails.result.email.split(\"@\")[0],\r\n        };\r\n\r\n        const messagesList = [...messages, newMessages];\r\n        setMessages(messagesList);\r\n        // console.log(\"I am printing the messages\", messages);\r\n      }\r\n    }\r\n  });\r\n\r\n  const checkVideoCallStatus = (val) => {\r\n    console.log(\"In call status\");\r\n    if (!val) {\r\n      setShowVideoCall(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-area-master\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"chat-header-dp-container\">\r\n          <img src={selectedUser.dpUrl} alt=\"userdp\"></img>\r\n        </div>\r\n        <div className=\"chat-header-user-container\">{selectedUser.name}</div>\r\n        <div className=\"video-cam-icon-container\" onClick={toggleVideoCall}>\r\n          <FontAwesomeIcon icon={faVideo} className=\"video-cam-icon\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"message-area\" ref={messageEl}>\r\n        <div\r\n          className={`${\r\n            showVideoCall ? \"temp-msg-container-small\" : \"temp-msg-container\"\r\n          }`}\r\n        >\r\n          {showMessages}\r\n          {showEmojiPicker && (\r\n            <span className=\"emoji-picker-span\">\r\n              <Picker onSelect={getEmoji} />\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"video-call\">\r\n          {showVideoCall && (\r\n            <Videocall\r\n              currentUser={props.selectedUser}\r\n              myInfo={props.myDetails}\r\n              showCallStatus={checkVideoCallStatus}\r\n              isVisible={showVideoCall}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"send-message-area\">\r\n        <form onSubmit={(e) => onMessage(e, messageContentState)}>\r\n          <input\r\n            className=\"chat-text-area\"\r\n            placeholder=\"Enter message to send\"\r\n            onChange={(e) => getContent(e)}\r\n            value={messageContentState}\r\n          ></input>\r\n          <span className=\"emoji-icon-container\" onClick={emojiToggle}>\r\n            <FontAwesomeIcon icon={faSmile} className=\"emoji-icon\" />\r\n          </span>\r\n\r\n          <button type=\"submit\" className=\"send-message-button\">\r\n            <FontAwesomeIcon\r\n              icon={faPaperPlane}\r\n              className=\"send-message-icon\"\r\n            />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatarea;\r\n","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Searchbar.js",[],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Usercard\\Usercard.js",[],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Side Panel\\SidePanel.js",["356","357","358","359","360"],"import React, { useState, useEffect } from \"react\";\r\nimport socket from \"../../socket\";\r\nimport Usercard from \"../Usercard/Usercard\";\r\nimport ChatList from \"./ChatList\";\r\nimport \"./SidePanel.css\";\r\n\r\nconst SidePanel = (props) => {\r\n  const [usersList, addUsers] = useState([]);\r\n  const [contactList, addUserChat] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"fetch-contact\", (contacts) => {\r\n      console.log(\"FETCH - CONTACT EVENT\", contacts);\r\n      for (let i = 0; i < contacts.length; i++) {\r\n        addUserChat([...contactList, contacts[i].contact]);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"FETCH - CONTACT EVENT USERLIST\", usersList);\r\n    let copyContactList = [...contactList];\r\n    console.log(\"COPY CONTACT\", copyContactList);\r\n\r\n    for (let i = 0; i < copyContactList.length; i++) {\r\n      for (let j = 0; j < usersList.length; j++) {\r\n        if (copyContactList[i].username === usersList[j].username) {\r\n          copyContactList[i].userID = usersList[j].userID;\r\n        }\r\n      }\r\n    }\r\n    addUserChat(copyContactList);\r\n    props.sendUserList(usersList);\r\n  }, [usersList]);\r\n\r\n  useEffect(() => {\r\n    let flag = 0;\r\n    for (let i = 0; i < usersList.length; i++) {\r\n      if (props.newChat === usersList[i].username) {\r\n        addUserChat([...contactList, usersList[i]]);\r\n        socket.emit(\"contact-list-db\", {\r\n          user: props.user.result.email.split(\"@\")[0],\r\n          contact: usersList[i],\r\n        });\r\n      }\r\n    }\r\n  }, [props.newChat]);\r\n\r\n  socket.on(\"users\", (users) => {\r\n    users.forEach((user) => {\r\n      user.self = user.userID === socket.id;\r\n    });\r\n    users = users.sort((a, b) => {\r\n      if (a.self) return -1;\r\n      if (b.self) return 1;\r\n      if (a.username < b.username) return -1;\r\n      return a.username > b.username ? 1 : 0;\r\n    });\r\n    addUsers(users);\r\n  });\r\n\r\n  socket.on(\"user connected\", (user) => {\r\n    let flag = 0;\r\n    if (user) {\r\n      const userListSize = usersList.length;\r\n      for (let i = 0; i < userListSize; i++) {\r\n        if (usersList[i].username === user.username) {\r\n          flag = 1;\r\n          usersList[i].userID = user.userID;\r\n        }\r\n      }\r\n      if (!flag) {\r\n        addUsers([...usersList, user]);\r\n      }\r\n    }\r\n  });\r\n\r\n  const getSelectedUser = (e) => {\r\n    console.log(\"This is sidepanel\", e);\r\n    props.getUser(e);\r\n  };\r\n  return (\r\n    <div className=\"Side-panel\">\r\n      <ChatList user_info={contactList} sendUser={(e) => getSelectedUser(e)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidePanel;\r\n","E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Side Panel\\ChatList.js",["361"],"E:\\MINI\\Mini Project\\mini-project-demo\\client\\src\\Home\\Chat window\\Videocall.js",["362","363","364","365"],["366","367"],"D:\\Colloquy\\client\\src\\index.js",[],"D:\\Colloquy\\client\\src\\App.js",["368"],"D:\\Colloquy\\client\\src\\reducers\\index.js",[],"D:\\Colloquy\\client\\src\\Front page\\Frontpage.js",["369","370"],"D:\\Colloquy\\client\\src\\Home\\Home.js",["371","372","373","374"],"D:\\Colloquy\\client\\src\\reducers\\auth.js",[],"D:\\Colloquy\\client\\src\\socket.js",[],"D:\\Colloquy\\client\\src\\Front page\\Footer.js",[],"D:\\Colloquy\\client\\src\\Home\\Snow\\Snow.js",[],"D:\\Colloquy\\client\\src\\Home\\Chat window\\Chatwindow.js",["375","376","377"],"D:\\Colloquy\\client\\src\\constants\\actionTypes.js",[],"D:\\Colloquy\\client\\src\\Home\\Chat window\\Chatarea.js",["378","379"],"D:\\Colloquy\\client\\src\\Home\\Chat window\\Searchbar.js",[],"D:\\Colloquy\\client\\src\\Home\\Usercard\\Usercard.js",[],"D:\\Colloquy\\client\\src\\Home\\Side Panel\\SidePanel.js",["380","381","382","383","384"],"D:\\Colloquy\\client\\src\\Home\\Side Panel\\ChatList.js",["385"],"D:\\Colloquy\\client\\src\\Home\\Chat window\\Videocall.js",["386","387","388","389"],{"ruleId":"390","replacedBy":"391"},{"ruleId":"392","replacedBy":"393"},{"ruleId":"394","severity":1,"message":"395","line":3,"column":50,"nodeType":"396","messageId":"397","endLine":3,"endColumn":54},{"ruleId":"394","severity":1,"message":"398","line":36,"column":11,"nodeType":"396","messageId":"397","endLine":36,"endColumn":16},{"ruleId":"399","severity":1,"message":"400","line":39,"column":6,"nodeType":"401","endLine":39,"endColumn":16,"suggestions":"402"},{"ruleId":"394","severity":1,"message":"403","line":2,"column":10,"nodeType":"396","messageId":"397","endLine":2,"endColumn":20},{"ruleId":"394","severity":1,"message":"404","line":10,"column":16,"nodeType":"396","messageId":"397","endLine":10,"endColumn":23},{"ruleId":"394","severity":1,"message":"405","line":11,"column":10,"nodeType":"396","messageId":"397","endLine":11,"endColumn":18},{"ruleId":"399","severity":1,"message":"406","line":22,"column":6,"nodeType":"401","endLine":22,"endColumn":8,"suggestions":"407"},{"ruleId":"394","severity":1,"message":"408","line":6,"column":8,"nodeType":"396","messageId":"397","endLine":6,"endColumn":16},{"ruleId":"394","severity":1,"message":"404","line":10,"column":16,"nodeType":"396","messageId":"397","endLine":10,"endColumn":23},{"ruleId":"394","severity":1,"message":"409","line":2,"column":8,"nodeType":"396","messageId":"397","endLine":2,"endColumn":18},{"ruleId":"394","severity":1,"message":"410","line":3,"column":8,"nodeType":"396","messageId":"397","endLine":3,"endColumn":16},{"ruleId":"399","severity":1,"message":"411","line":12,"column":6,"nodeType":"401","endLine":12,"endColumn":17,"suggestions":"412"},{"ruleId":"394","severity":1,"message":"413","line":8,"column":10,"nodeType":"396","messageId":"397","endLine":8,"endColumn":21},{"ruleId":"414","severity":1,"message":"415","line":76,"column":54,"nodeType":"416","messageId":"417","endLine":76,"endColumn":56},{"ruleId":"399","severity":1,"message":"418","line":51,"column":6,"nodeType":"401","endLine":51,"endColumn":27,"suggestions":"419"},{"ruleId":"414","severity":1,"message":"420","line":107,"column":30,"nodeType":"421","messageId":"422","endLine":107,"endColumn":39},{"ruleId":"414","severity":1,"message":"420","line":120,"column":30,"nodeType":"421","messageId":"422","endLine":120,"endColumn":39},{"ruleId":"414","severity":1,"message":"420","line":132,"column":32,"nodeType":"421","messageId":"422","endLine":132,"endColumn":41},{"ruleId":"390","replacedBy":"423"},{"ruleId":"392","replacedBy":"424"},{"ruleId":"394","severity":1,"message":"395","line":3,"column":50,"nodeType":"396","messageId":"397","endLine":3,"endColumn":54},{"ruleId":"394","severity":1,"message":"403","line":2,"column":10,"nodeType":"396","messageId":"397","endLine":2,"endColumn":20},{"ruleId":"394","severity":1,"message":"404","line":10,"column":16,"nodeType":"396","messageId":"397","endLine":10,"endColumn":23},{"ruleId":"394","severity":1,"message":"405","line":11,"column":10,"nodeType":"396","messageId":"397","endLine":11,"endColumn":18},{"ruleId":"399","severity":1,"message":"406","line":23,"column":6,"nodeType":"401","endLine":23,"endColumn":8,"suggestions":"425"},{"ruleId":"394","severity":1,"message":"398","line":37,"column":11,"nodeType":"396","messageId":"397","endLine":37,"endColumn":16},{"ruleId":"399","severity":1,"message":"400","line":40,"column":6,"nodeType":"401","endLine":40,"endColumn":16,"suggestions":"426"},{"ruleId":"394","severity":1,"message":"408","line":6,"column":8,"nodeType":"396","messageId":"397","endLine":6,"endColumn":16},{"ruleId":"394","severity":1,"message":"404","line":11,"column":16,"nodeType":"396","messageId":"397","endLine":11,"endColumn":23},{"ruleId":"399","severity":1,"message":"427","line":49,"column":6,"nodeType":"401","endLine":49,"endColumn":8,"suggestions":"428"},{"ruleId":"414","severity":1,"message":"415","line":95,"column":54,"nodeType":"416","messageId":"417","endLine":95,"endColumn":56},{"ruleId":"394","severity":1,"message":"429","line":1,"column":17,"nodeType":"396","messageId":"397","endLine":1,"endColumn":25},{"ruleId":"394","severity":1,"message":"410","line":3,"column":8,"nodeType":"396","messageId":"397","endLine":3,"endColumn":16},{"ruleId":"399","severity":1,"message":"411","line":12,"column":6,"nodeType":"401","endLine":12,"endColumn":17,"suggestions":"430"},{"ruleId":"399","severity":1,"message":"418","line":51,"column":6,"nodeType":"401","endLine":51,"endColumn":27,"suggestions":"431"},{"ruleId":"414","severity":1,"message":"420","line":107,"column":30,"nodeType":"421","messageId":"422","endLine":107,"endColumn":39},{"ruleId":"414","severity":1,"message":"420","line":120,"column":30,"nodeType":"421","messageId":"422","endLine":120,"endColumn":39},{"ruleId":"414","severity":1,"message":"420","line":132,"column":32,"nodeType":"421","messageId":"422","endLine":132,"endColumn":41},{"ruleId":"390","replacedBy":"432"},{"ruleId":"392","replacedBy":"433"},{"ruleId":"390","replacedBy":"434"},{"ruleId":"392","replacedBy":"435"},{"ruleId":"394","severity":1,"message":"395","line":3,"column":50,"nodeType":"396","messageId":"397","endLine":3,"endColumn":54},{"ruleId":"394","severity":1,"message":"398","line":37,"column":11,"nodeType":"396","messageId":"397","endLine":37,"endColumn":16},{"ruleId":"399","severity":1,"message":"400","line":40,"column":6,"nodeType":"401","endLine":40,"endColumn":16,"suggestions":"436"},{"ruleId":"394","severity":1,"message":"403","line":2,"column":10,"nodeType":"396","messageId":"397","endLine":2,"endColumn":20},{"ruleId":"394","severity":1,"message":"404","line":10,"column":16,"nodeType":"396","messageId":"397","endLine":10,"endColumn":23},{"ruleId":"394","severity":1,"message":"405","line":11,"column":10,"nodeType":"396","messageId":"397","endLine":11,"endColumn":18},{"ruleId":"399","severity":1,"message":"406","line":23,"column":6,"nodeType":"401","endLine":23,"endColumn":8,"suggestions":"437"},{"ruleId":"394","severity":1,"message":"408","line":6,"column":8,"nodeType":"396","messageId":"397","endLine":6,"endColumn":16},{"ruleId":"394","severity":1,"message":"404","line":11,"column":16,"nodeType":"396","messageId":"397","endLine":11,"endColumn":23},{"ruleId":"394","severity":1,"message":"438","line":19,"column":7,"nodeType":"396","messageId":"397","endLine":19,"endColumn":16},{"ruleId":"399","severity":1,"message":"427","line":49,"column":6,"nodeType":"401","endLine":49,"endColumn":8,"suggestions":"439"},{"ruleId":"414","severity":1,"message":"415","line":95,"column":54,"nodeType":"416","messageId":"417","endLine":95,"endColumn":56},{"ruleId":"394","severity":1,"message":"410","line":3,"column":8,"nodeType":"396","messageId":"397","endLine":3,"endColumn":16},{"ruleId":"399","severity":1,"message":"440","line":18,"column":6,"nodeType":"401","endLine":18,"endColumn":8,"suggestions":"441"},{"ruleId":"399","severity":1,"message":"442","line":34,"column":6,"nodeType":"401","endLine":34,"endColumn":17,"suggestions":"443"},{"ruleId":"394","severity":1,"message":"444","line":37,"column":9,"nodeType":"396","messageId":"397","endLine":37,"endColumn":13},{"ruleId":"399","severity":1,"message":"445","line":47,"column":6,"nodeType":"401","endLine":47,"endColumn":21,"suggestions":"446"},{"ruleId":"394","severity":1,"message":"429","line":1,"column":17,"nodeType":"396","messageId":"397","endLine":1,"endColumn":25},{"ruleId":"399","severity":1,"message":"418","line":51,"column":6,"nodeType":"401","endLine":51,"endColumn":27,"suggestions":"447"},{"ruleId":"414","severity":1,"message":"420","line":107,"column":30,"nodeType":"421","messageId":"422","endLine":107,"endColumn":39},{"ruleId":"414","severity":1,"message":"420","line":120,"column":30,"nodeType":"421","messageId":"422","endLine":120,"endColumn":39},{"ruleId":"414","severity":1,"message":"420","line":132,"column":32,"nodeType":"421","messageId":"422","endLine":132,"endColumn":41},{"ruleId":"390","replacedBy":"448"},{"ruleId":"392","replacedBy":"449"},{"ruleId":"394","severity":1,"message":"395","line":3,"column":50,"nodeType":"396","messageId":"397","endLine":3,"endColumn":54},{"ruleId":"394","severity":1,"message":"398","line":37,"column":11,"nodeType":"396","messageId":"397","endLine":37,"endColumn":16},{"ruleId":"399","severity":1,"message":"400","line":40,"column":6,"nodeType":"401","endLine":40,"endColumn":16,"suggestions":"450"},{"ruleId":"394","severity":1,"message":"403","line":2,"column":10,"nodeType":"396","messageId":"397","endLine":2,"endColumn":20},{"ruleId":"394","severity":1,"message":"404","line":10,"column":16,"nodeType":"396","messageId":"397","endLine":10,"endColumn":23},{"ruleId":"394","severity":1,"message":"405","line":11,"column":10,"nodeType":"396","messageId":"397","endLine":11,"endColumn":18},{"ruleId":"399","severity":1,"message":"406","line":23,"column":6,"nodeType":"401","endLine":23,"endColumn":8,"suggestions":"451"},{"ruleId":"394","severity":1,"message":"408","line":6,"column":8,"nodeType":"396","messageId":"397","endLine":6,"endColumn":16},{"ruleId":"394","severity":1,"message":"404","line":11,"column":16,"nodeType":"396","messageId":"397","endLine":11,"endColumn":23},{"ruleId":"394","severity":1,"message":"438","line":19,"column":7,"nodeType":"396","messageId":"397","endLine":19,"endColumn":16},{"ruleId":"399","severity":1,"message":"427","line":49,"column":6,"nodeType":"401","endLine":49,"endColumn":8,"suggestions":"452"},{"ruleId":"414","severity":1,"message":"415","line":94,"column":54,"nodeType":"416","messageId":"417","endLine":94,"endColumn":56},{"ruleId":"394","severity":1,"message":"410","line":3,"column":8,"nodeType":"396","messageId":"397","endLine":3,"endColumn":16},{"ruleId":"399","severity":1,"message":"440","line":18,"column":6,"nodeType":"401","endLine":18,"endColumn":8,"suggestions":"453"},{"ruleId":"399","severity":1,"message":"442","line":34,"column":6,"nodeType":"401","endLine":34,"endColumn":17,"suggestions":"454"},{"ruleId":"394","severity":1,"message":"444","line":37,"column":9,"nodeType":"396","messageId":"397","endLine":37,"endColumn":13},{"ruleId":"399","severity":1,"message":"445","line":47,"column":6,"nodeType":"401","endLine":47,"endColumn":21,"suggestions":"455"},{"ruleId":"394","severity":1,"message":"429","line":1,"column":17,"nodeType":"396","messageId":"397","endLine":1,"endColumn":25},{"ruleId":"399","severity":1,"message":"418","line":51,"column":6,"nodeType":"401","endLine":51,"endColumn":27,"suggestions":"456"},{"ruleId":"414","severity":1,"message":"420","line":107,"column":30,"nodeType":"421","messageId":"422","endLine":107,"endColumn":39},{"ruleId":"414","severity":1,"message":"420","line":120,"column":30,"nodeType":"421","messageId":"422","endLine":120,"endColumn":39},{"ruleId":"414","severity":1,"message":"420","line":132,"column":32,"nodeType":"421","messageId":"422","endLine":132,"endColumn":41},"no-native-reassign",["457"],"no-negated-in-lhs",["458"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user?.token'. Either include it or remove the dependency array.","ArrayExpression",["459"],"'useHistory' is defined but never used.","'setUser' is assigned a value but never used.","'userName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user.result.email', 'user.result.familyName', 'user.result.givenName', and 'user.result.imageUrl'. Either include them or remove the dependency array.",["460"],"'ChatList' is defined but never used.","'background' is defined but never used.","'Usercard' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["461"],"'currentUser' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'props.currentUser.userID'. Either include it or remove the dependency array. If 'setIdToCall' needs the current value of 'props.currentUser.userID', you can also switch to useReducer instead of useState and read 'props.currentUser.userID' in the reducer.",["462"],"Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside",["457"],["458"],["463"],["464"],"React Hook useEffect has missing dependencies: 'props.initialMsg' and 'props.myDetails.result.email'. Either include them or remove the dependency array. If 'setMessages' needs the current value of 'props.initialMsg', you can also switch to useReducer instead of useState and read 'props.initialMsg' in the reducer.",["465"],"'useState' is defined but never used.",["466"],["467"],["457"],["458"],["457"],["458"],["468"],["469"],"'usersList' is assigned a value but never used.",["470"],"React Hook useEffect has a missing dependency: 'contactList'. Either include it or remove the dependency array. You can also do a functional update 'addUserChat(c => ...)' if you only need 'contactList' in the 'addUserChat' call.",["471"],"React Hook useEffect has missing dependencies: 'contactList' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["472"],"'flag' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'contactList', 'props.user.result.email', and 'usersList'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'addUserChat' needs the current value of 'usersList'.",["473"],["474"],["457"],["458"],["475"],["476"],["477"],["478"],["479"],["480"],["481"],"no-global-assign","no-unsafe-negation",{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"484","fix":"490"},{"desc":"482","fix":"491"},{"desc":"492","fix":"493"},{"desc":"486","fix":"494"},{"desc":"488","fix":"495"},{"desc":"482","fix":"496"},{"desc":"484","fix":"497"},{"desc":"492","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"488","fix":"505"},{"desc":"482","fix":"506"},{"desc":"484","fix":"507"},{"desc":"492","fix":"508"},{"desc":"499","fix":"509"},{"desc":"501","fix":"510"},{"desc":"503","fix":"511"},{"desc":"488","fix":"512"},"Update the dependencies array to be: [location, user?.token]",{"range":"513","text":"514"},"Update the dependencies array to be: [user.result.email, user.result.familyName, user.result.givenName, user.result.imageUrl]",{"range":"515","text":"516"},"Update the dependencies array to be: [props, usersList]",{"range":"517","text":"518"},"Update the dependencies array to be: [props.currentUser.userID, props.showVideoCall]",{"range":"519","text":"520"},{"range":"521","text":"516"},{"range":"522","text":"514"},"Update the dependencies array to be: [props.initialMsg, props.myDetails.result.email]",{"range":"523","text":"524"},{"range":"525","text":"518"},{"range":"526","text":"520"},{"range":"527","text":"514"},{"range":"528","text":"516"},{"range":"529","text":"524"},"Update the dependencies array to be: [contactList]",{"range":"530","text":"531"},"Update the dependencies array to be: [contactList, props, usersList]",{"range":"532","text":"533"},"Update the dependencies array to be: [contactList, props.newChat, props.user.result.email, usersList]",{"range":"534","text":"535"},{"range":"536","text":"520"},{"range":"537","text":"514"},{"range":"538","text":"516"},{"range":"539","text":"524"},{"range":"540","text":"531"},{"range":"541","text":"533"},{"range":"542","text":"535"},{"range":"543","text":"520"},[1209,1219],"[location, user?.token]",[746,748],"[user.result.email, user.result.familyName, user.result.givenName, user.result.imageUrl]",[343,354],"[props, usersList]",[1558,1579],"[props.currentUser.userID, props.showVideoCall]",[812,814],[1262,1272],[1567,1569],"[props.initialMsg, props.myDetails.result.email]",[343,354],[1558,1579],[1262,1272],[812,814],[1567,1569],[592,594],"[contactList]",[1123,1134],"[contactList, props, usersList]",[1504,1519],"[contactList, props.newChat, props.user.result.email, usersList]",[1558,1579],[1262,1272],[812,814],[1567,1569],[592,594],[1123,1134],[1504,1519],[1558,1579]]