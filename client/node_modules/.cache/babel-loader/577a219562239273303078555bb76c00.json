{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\psing\\\\OneDrive\\\\Desktop\\\\ZenTalk\\\\client\\\\src\\\\Home\\\\Chat window\\\\Chatwindow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Chatwindow.css\";\nimport Usercard from \"../Usercard/Usercard\";\nimport SidePanel from \"../Side Panel/SidePanel\";\nimport Searchbar from \"./Searchbar\";\nimport ChatList from \"../Side Panel/ChatList\";\nimport Chatarea from \"./Chatarea\";\nimport socket from \"../../socket\";\n\nconst Chatwindow = () => {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const [selectedUser, setSelectedUser] = useState({});\n  const [selectedUserState, setStatus] = useState(false);\n  const [connectedUsersList, updateUserList] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [searchUser, insertUser] = useState(\"\");\n  const user_info = user;\n  let usersList = [];\n\n  const getSelectedUser = e => {\n    let selectedUserDetails = e;\n    console.log(\"This is Chatwindow\", selectedUserDetails);\n    setSelectedUser(selectedUserDetails);\n    setStatus(true);\n  };\n\n  useEffect(() => {\n    socket.on(\"db-messages-output\", result => {\n      console.log(result);\n      setMessages(result);\n    });\n  }, []);\n\n  const getUserList = e => {\n    updateUserList(e); // usersList = [...usersList, e];\n\n    console.log(\"UserList in Chatwindow\", connectedUsersList);\n  };\n\n  const getSearchVal = searchContent => {\n    let flag = 0;\n\n    for (let i = 0; i < connectedUsersList.length; i++) {\n      if (searchContent === connectedUsersList[i].username) {\n        insertUser(searchContent);\n        flag = 1;\n      }\n    }\n\n    if (!flag) alert(\"User not found\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper1\",\n      children: [/*#__PURE__*/_jsxDEV(Usercard, {\n        user: user_info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n        giveSearchVal: e => getSearchVal(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SidePanel, {\n        user: user_info,\n        getUser: e => getSelectedUser(e),\n        sendUserList: e => getUserList(e),\n        newChat: searchUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper2\",\n      children: selectedUserState ? /*#__PURE__*/_jsxDEV(Chatarea, {\n        selectedUser: selectedUser,\n        connectedUsers: connectedUsersList,\n        myDetails: user_info,\n        initialMsg: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-render-message\",\n        children: \"Click chat to start messaging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chatwindow, \"NucNrS/+HtzvNdKE9VbIACLP7dA=\");\n\n_c = Chatwindow;\nexport default Chatwindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatwindow\");","map":{"version":3,"sources":["C:/Users/psing/OneDrive/Desktop/ZenTalk/client/src/Home/Chat window/Chatwindow.js"],"names":["React","useState","useEffect","Usercard","SidePanel","Searchbar","ChatList","Chatarea","socket","Chatwindow","user","setUser","JSON","parse","localStorage","getItem","selectedUser","setSelectedUser","selectedUserState","setStatus","connectedUsersList","updateUserList","messages","setMessages","searchUser","insertUser","user_info","usersList","getSelectedUser","e","selectedUserDetails","console","log","on","result","getUserList","getSearchVal","searchContent","flag","i","length","username","alert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Chatwindow.css\";\r\nimport Usercard from \"../Usercard/Usercard\";\r\nimport SidePanel from \"../Side Panel/SidePanel\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport ChatList from \"../Side Panel/ChatList\";\r\nimport Chatarea from \"./Chatarea\";\r\nimport socket from \"../../socket\";\r\n\r\nconst Chatwindow = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [selectedUserState, setStatus] = useState(false);\r\n  const [connectedUsersList, updateUserList] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [searchUser, insertUser] = useState(\"\");\r\n  const user_info = user;\r\n\r\n  let usersList = [];\r\n  const getSelectedUser = (e) => {\r\n    let selectedUserDetails = e;\r\n    console.log(\"This is Chatwindow\", selectedUserDetails);\r\n    setSelectedUser(selectedUserDetails);\r\n    setStatus(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"db-messages-output\", (result) => {\r\n      console.log(result);\r\n      setMessages(result);\r\n    });\r\n  }, []);\r\n\r\n  const getUserList = (e) => {\r\n    updateUserList(e);\r\n    // usersList = [...usersList, e];\r\n    console.log(\"UserList in Chatwindow\", connectedUsersList);\r\n  };\r\n\r\n  const getSearchVal = (searchContent) => {\r\n    let flag = 0;\r\n    for (let i = 0; i < connectedUsersList.length; i++) {\r\n      if (searchContent === connectedUsersList[i].username) {\r\n        insertUser(searchContent);\r\n        flag = 1;\r\n      }\r\n    }\r\n    if (!flag) alert(\"User not found\");\r\n  };\r\n  return (\r\n    <div className=\"container-chat\">\r\n      <div className=\"wrapper1\">\r\n        <Usercard user={user_info} />\r\n        <Searchbar giveSearchVal={(e) => getSearchVal(e)} />\r\n        <SidePanel\r\n          user={user_info}\r\n          getUser={(e) => getSelectedUser(e)}\r\n          sendUserList={(e) => getUserList(e)}\r\n          newChat={searchUser}\r\n        />\r\n      </div>\r\n      <div className=\"wrapper2\">\r\n        {selectedUserState ? (\r\n          <Chatarea\r\n            selectedUser={selectedUser}\r\n            connectedUsers={connectedUsersList}\r\n            myDetails={user_info}\r\n            initialMsg={messages}\r\n          />\r\n        ) : (\r\n          <div className=\"no-render-message\">Click chat to start messaging</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatwindow;\r\n"]},"metadata":{},"sourceType":"module"}