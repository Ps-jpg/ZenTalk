{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\psing\\\\OneDrive\\\\Desktop\\\\ZenTalk\\\\client\\\\src\\\\Home\\\\Side Panel\\\\SidePanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport socket from \"../../socket\";\nimport Usercard from \"../Usercard/Usercard\";\nimport ChatList from \"./ChatList\";\nimport \"./SidePanel.css\";\n\nconst SidePanel = props => {\n  _s();\n\n  const [usersList, addUsers] = useState([]);\n  const [contactList, addUserChat] = useState([]);\n  useEffect(() => {\n    socket.on(\"fetch-contact\", contacts => {\n      console.log(\"FETCH - CONTACT EVENT\", contacts);\n\n      for (let i = 0; i < contacts.length; i++) {\n        addUserChat([...contactList, contacts[i].contact]);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"FETCH - CONTACT EVENT USERLIST\", usersList);\n    let copyContactList = [...contactList];\n    console.log(\"COPY CONTACT\", copyContactList);\n\n    for (let i = 0; i < copyContactList.length; i++) {\n      for (let j = 0; j < usersList.length; j++) {\n        if (copyContactList[i].username === usersList[j].username) {\n          copyContactList[i].userID = usersList[j].userID;\n        }\n      }\n    }\n\n    addUserChat(copyContactList);\n    props.sendUserList(usersList);\n  }, [usersList]);\n  useEffect(() => {\n    let flag = 0;\n\n    for (let i = 0; i < usersList.length; i++) {\n      if (props.newChat === usersList[i].username) {\n        addUserChat([...contactList, usersList[i]]);\n        socket.emit(\"contact-list-db\", {\n          user: props.user.result.email.split(\"@\")[0],\n          contact: usersList[i]\n        });\n      }\n    }\n  }, [props.newChat]);\n  socket.on(\"users\", users => {\n    users.forEach(user => {\n      user.self = user.userID === socket.id;\n    });\n    users = users.sort((a, b) => {\n      if (a.self) return -1;\n      if (b.self) return 1;\n      if (a.username < b.username) return -1;\n      return a.username > b.username ? 1 : 0;\n    });\n    addUsers(users);\n  });\n  socket.on(\"user connected\", user => {\n    let flag = 0;\n\n    if (user) {\n      const userListSize = usersList.length;\n\n      for (let i = 0; i < userListSize; i++) {\n        if (usersList[i].username === user.username) {\n          flag = 1;\n          usersList[i].userID = user.userID;\n        }\n      }\n\n      if (!flag) {\n        addUsers([...usersList, user]);\n      }\n    }\n  });\n\n  const getSelectedUser = e => {\n    console.log(\"This is sidepanel\", e);\n    props.getUser(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Side-panel\",\n    children: /*#__PURE__*/_jsxDEV(ChatList, {\n      user_info: contactList,\n      sendUser: e => getSelectedUser(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SidePanel, \"urTg9t6iLNO8rTIxY/WWNmus/Sc=\");\n\n_c = SidePanel;\nexport default SidePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidePanel\");","map":{"version":3,"sources":["C:/Users/psing/OneDrive/Desktop/ZenTalk/client/src/Home/Side Panel/SidePanel.js"],"names":["React","useState","useEffect","socket","Usercard","ChatList","SidePanel","props","usersList","addUsers","contactList","addUserChat","on","contacts","console","log","i","length","contact","copyContactList","j","username","userID","sendUserList","flag","newChat","emit","user","result","email","split","users","forEach","self","id","sort","a","b","userListSize","getSelectedUser","e","getUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport socket from \"../../socket\";\r\nimport Usercard from \"../Usercard/Usercard\";\r\nimport ChatList from \"./ChatList\";\r\nimport \"./SidePanel.css\";\r\n\r\nconst SidePanel = (props) => {\r\n  const [usersList, addUsers] = useState([]);\r\n  const [contactList, addUserChat] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"fetch-contact\", (contacts) => {\r\n      console.log(\"FETCH - CONTACT EVENT\", contacts);\r\n      for (let i = 0; i < contacts.length; i++) {\r\n        addUserChat([...contactList, contacts[i].contact]);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"FETCH - CONTACT EVENT USERLIST\", usersList);\r\n    let copyContactList = [...contactList];\r\n    console.log(\"COPY CONTACT\", copyContactList);\r\n\r\n    for (let i = 0; i < copyContactList.length; i++) {\r\n      for (let j = 0; j < usersList.length; j++) {\r\n        if (copyContactList[i].username === usersList[j].username) {\r\n          copyContactList[i].userID = usersList[j].userID;\r\n        }\r\n      }\r\n    }\r\n    addUserChat(copyContactList);\r\n    props.sendUserList(usersList);\r\n  }, [usersList]);\r\n\r\n  useEffect(() => {\r\n    let flag = 0;\r\n    for (let i = 0; i < usersList.length; i++) {\r\n      if (props.newChat === usersList[i].username) {\r\n        addUserChat([...contactList, usersList[i]]);\r\n        socket.emit(\"contact-list-db\", {\r\n          user: props.user.result.email.split(\"@\")[0],\r\n          contact: usersList[i],\r\n        });\r\n      }\r\n    }\r\n  }, [props.newChat]);\r\n\r\n  socket.on(\"users\", (users) => {\r\n    users.forEach((user) => {\r\n      user.self = user.userID === socket.id;\r\n    });\r\n    users = users.sort((a, b) => {\r\n      if (a.self) return -1;\r\n      if (b.self) return 1;\r\n      if (a.username < b.username) return -1;\r\n      return a.username > b.username ? 1 : 0;\r\n    });\r\n    addUsers(users);\r\n  });\r\n\r\n  socket.on(\"user connected\", (user) => {\r\n    let flag = 0;\r\n    if (user) {\r\n      const userListSize = usersList.length;\r\n      for (let i = 0; i < userListSize; i++) {\r\n        if (usersList[i].username === user.username) {\r\n          flag = 1;\r\n          usersList[i].userID = user.userID;\r\n        }\r\n      }\r\n      if (!flag) {\r\n        addUsers([...usersList, user]);\r\n      }\r\n    }\r\n  });\r\n\r\n  const getSelectedUser = (e) => {\r\n    console.log(\"This is sidepanel\", e);\r\n    props.getUser(e);\r\n  };\r\n  return (\r\n    <div className=\"Side-panel\">\r\n      <ChatList user_info={contactList} sendUser={(e) => getSelectedUser(e)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidePanel;\r\n"]},"metadata":{},"sourceType":"module"}